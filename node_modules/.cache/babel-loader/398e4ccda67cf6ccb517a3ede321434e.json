{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Project\\\\Restuarants\\\\src\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [list, setList] = useState([]);\n\n  const inputEvent = e => {\n    setText(e.target.value);\n  };\n\n  const addList = () => {\n    if (text) {\n      const Lists = {\n        id: '0',\n        name: text\n      };\n      setList(oldData => {\n        return [...oldData, Lists];\n      });\n      setText('');\n    } else {\n      alert(\"Cann't add empty item\");\n    }\n  };\n\n  const deleteLists = id => {\n    setList(oldList => {\n      return oldList.filter((val, ind) => {\n        return ind !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card todo-list-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add Items in TODO List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: text,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer text-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: addList,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), list.map((val, ind) => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        id: ind,\n        list: val,\n        deleteList: deleteLists\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(TodoList, \"vrBKuh+91IfT8cLV1hlHfeBrOZ8=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React-Project/Restuarants/src/TodoList/TodoList.js"],"names":["React","useState","List","TodoList","text","setText","list","setList","inputEvent","e","target","value","addList","Lists","id","name","oldData","alert","deleteLists","oldList","filter","val","ind","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AAElB,QAAIR,IAAJ,EAAU;AACN,YAAMS,KAAK,GAAG;AACVC,QAAAA,EAAE,EAAE,GADM;AAEVC,QAAAA,IAAI,EAAEX;AAFI,OAAd;AAIAG,MAAAA,OAAO,CAAES,OAAD,IAAa;AACjB,eAAO,CAAC,GAAGA,OAAJ,EAAaH,KAAb,CAAP;AACH,OAFM,CAAP;AAIAR,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAVD,MAUO;AACHY,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;AACJ,GAfD;;AAgBA,QAAMC,WAAW,GAAIJ,EAAD,IAAQ;AACxBP,IAAAA,OAAO,CAAEY,OAAD,IAAa;AACjB,aAAOA,OAAO,CAACC,MAAR,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,eAAOA,GAAG,KAAKR,EAAf;AACH,OAFM,CAAP;AAGH,KAJM,CAAP;AAKH,GAND;;AAOA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,KAAK,EAAEV,IAAnD;AAAyD,UAAA,QAAQ,EAAEI;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEI,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYQN,IAAI,CAACiB,GAAL,CAAS,CAACF,GAAD,EAAMC,GAAN,KAAc;AACnB,0BACI,QAAC,IAAD;AAAgB,QAAA,EAAE,EAAEA,GAApB;AAAyB,QAAA,IAAI,EAAED,GAA/B;AAAoC,QAAA,UAAU,EAAEH;AAAhD,SAAWI,GAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALD,CAZR;AAAA,kBADJ;AAuBH,CAtDD;;GAAMnB,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport List from './List'\r\n\r\n\r\nconst TodoList = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [list, setList] = useState([]);\r\n    const inputEvent = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const addList = () => {\r\n\r\n        if (text) {\r\n            const Lists = {\r\n                id: '0',\r\n                name: text\r\n            }\r\n            setList((oldData) => {\r\n                return [...oldData, Lists];\r\n            }\r\n            );\r\n            setText('');\r\n        } else {\r\n            alert(\"Cann't add empty item\");\r\n        }\r\n    }\r\n    const deleteLists = (id) => {\r\n        setList((oldList) => {\r\n            return oldList.filter((val, ind) => {\r\n                return ind !== id;\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"card todo-list-wrap\">\r\n                <div className=\"card-header\"><h4>Add Items in TODO List</h4></div>\r\n                <div className=\"card-body\">\r\n                    <label>Enter Items</label>\r\n                    <input type=\"text\" className='form-control' value={text} onChange={inputEvent} />\r\n                </div>\r\n                <div className=\"card-footer text-end\">\r\n                    <button className=\"btn btn-primary\" onClick={addList}>Add</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                list.map((val, ind) => {\r\n                    return (\r\n                        <List key={ind} id={ind} list={val} deleteList={deleteLists} />\r\n                    )\r\n\r\n                })\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}