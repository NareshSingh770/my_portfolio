{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Project\\\\Restuarants\\\\src\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getlocalData = () => {\n  const allData = localStorage.getItem('ToDoList');\n\n  if (allData) {\n    return JSON.parse(allData);\n  } else {\n    return [];\n  }\n};\n\nconst TodoList = () => {\n  _s();\n\n  const [state, setState] = useState('add');\n  const [text, setText] = useState('');\n  const [list, setList] = useState(getlocalData);\n\n  const inputEvent = e => {\n    setText(e.target.value);\n  };\n\n  const addList = () => {\n    if (text) {\n      const listsAdd = {\n        id: new Date().getTime().toString(),\n        name: text\n      };\n      console.log(listsAdd);\n      setList([...list, listsAdd]);\n      setText('');\n    } else {\n      alert(\"Cann't add empty item\");\n    }\n  };\n\n  const deleteLists = id => {\n    setList(oldList => {\n      return oldList.filter(val => {\n        return val.id != id;\n      });\n    });\n  };\n\n  const doneEdit = () => {\n    const data = list;\n    data.forEach(val => {\n      if (val.id === state) {\n        val.name = text;\n      }\n    });\n    console.log(data);\n    setList(list);\n  };\n\n  const deleteAll = () => {\n    setList([]);\n  };\n\n  const editNotes = id => {\n    list.forEach(val => {\n      if (id === val.id) {\n        setText(val.name);\n        setState(id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('ToDoList', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card todo-list-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add Items in TODO List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: text,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer text-end\",\n        children: state === 'add' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: addList,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: doneEdit,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 112\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: deleteAll,\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), list.map((val, ind) => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        id: val.id,\n        edit: editNotes,\n        list: val.name,\n        deleteList: deleteLists\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(TodoList, \"6KIwDJRdl7JbOhDkGzDf5dPbApM=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React-Project/Restuarants/src/TodoList/TodoList.js"],"names":["React","useState","useEffect","List","getlocalData","allData","localStorage","getItem","JSON","parse","TodoList","state","setState","text","setText","list","setList","inputEvent","e","target","value","addList","listsAdd","id","Date","getTime","toString","name","console","log","alert","deleteLists","oldList","filter","val","doneEdit","data","forEach","deleteAll","editNotes","setItem","stringify","map","ind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\n\r\nconst getlocalData = () => {\r\n    const allData = localStorage.getItem('ToDoList');\r\n    if (allData) {\r\n        return JSON.parse(allData);\r\n    }\r\n    else {\r\n        return []\r\n    }\r\n}\r\nconst TodoList = () => {\r\n    const [state, setState] = useState('add');\r\n    const [text, setText] = useState('');\r\n    const [list, setList] = useState(getlocalData);\r\n\r\n\r\n\r\n    const inputEvent = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const addList = () => {\r\n\r\n        if (text) {\r\n            const listsAdd = {\r\n                id: new Date().getTime().toString(),\r\n                name: text,\r\n            };\r\n            console.log(listsAdd);\r\n            setList([...list, listsAdd]);\r\n            setText('');\r\n        } else {\r\n            alert(\"Cann't add empty item\");\r\n        }\r\n    }\r\n    const deleteLists = (id) => {\r\n        setList((oldList) => {\r\n            return oldList.filter((val) => {\r\n                return val.id != id;\r\n            })\r\n        })\r\n    }\r\n    const doneEdit = () => {\r\n        const data = list\r\n        data.forEach(val => {\r\n            if (val.id === state) {\r\n                val.name = text\r\n            }\r\n        })\r\n        console.log(data)\r\n        setList(list)\r\n    }\r\n    const deleteAll = () => {\r\n        setList([])\r\n    }\r\n\r\n    const editNotes = (id) => {\r\n        list.forEach(val => {\r\n            if (id === val.id) {\r\n                setText(val.name)\r\n                setState(id)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('ToDoList', JSON.stringify(list));\r\n    }, [list])\r\n    return (\r\n        <>\r\n            <div className=\"card todo-list-wrap\">\r\n                <div className=\"card-header\"><h4>Add Items in TODO List</h4></div>\r\n                <div className=\"card-body\">\r\n                    <label>Enter Items</label>\r\n                    <input type=\"text\" className='form-control' value={text} onChange={inputEvent} />\r\n                </div>\r\n                <div className=\"card-footer text-end\">\r\n                    {\r\n                        state === 'add' ? <button className=\"btn btn-primary\" onClick={addList}>Add</button> : <button className=\"btn btn-primary\" onClick={doneEdit}>Done</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='text-center mb-5'>\r\n                <button className=\"btn btn-outline-danger\" onClick={deleteAll}>Delete All</button>\r\n            </div>\r\n            {\r\n                list.map((val, ind) => {\r\n                    return (\r\n                        <List key={ind} id={val.id} edit={editNotes} list={val.name} deleteList={deleteLists} />\r\n                    )\r\n\r\n                })\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}