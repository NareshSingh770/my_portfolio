{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Project\\\\Restuarants\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MenuCards from './MenuCards';\nimport MenuItems from './MenuItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categoryList = [...new Set(MenuItems.map(val => {\n  return val.category;\n})), 'All'];\n\nconst App = () => {\n  _s();\n\n  const totalItems = MenuItems.length;\n  const [list, setList] = useState(MenuItems);\n  const [total, setTotal] = useState(totalItems);\n\n  const showItems = e => {\n    const btnVal = e.target.innerHTML;\n    const AllBtn = document.querySelectorAll('.navbar-items button');\n    console.log(AllBtn);\n    const activeClass = AllBtn.filter(val => {\n      return val;\n    });\n    console.log(activeClass);\n\n    if (btnVal === 'All') {\n      setList(MenuItems);\n      setTotal(MenuItems.length);\n    } else {\n      const filteredList = MenuItems.filter(val => {\n        return val.category === btnVal;\n      });\n      setTotal(filteredList.length);\n      setList(filteredList);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-items bg-dark p-2 d-flex justify-content-center\",\n            children: categoryList.map((val, ind) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: `btn-${ind + 1}`,\n                  className: \"btn btn-outline-light mx-2\",\n                  onClick: showItems,\n                  children: val\n                }, ind, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results col-12 my-4\",\n              children: [\"showing \", total, \" of \", totalItems]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), list.map((val, ind) => {\n              return /*#__PURE__*/_jsxDEV(MenuCards, {\n                desc: val.description,\n                img: val.img,\n                cat: val.category,\n                price: val.price,\n                item: val.item\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"J+OhRrgEB5u/5I4dYyZg+ZTJ2zE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React-Project/Restuarants/src/App.js"],"names":["React","useState","MenuCards","MenuItems","categoryList","Set","map","val","category","App","totalItems","length","list","setList","total","setTotal","showItems","e","btnVal","target","innerHTML","AllBtn","document","querySelectorAll","console","log","activeClass","filter","filteredList","ind","description","img","price","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport MenuCards from './MenuCards';\nimport MenuItems from './MenuItems';\n\nconst categoryList = [...new Set(MenuItems.map((val) => {\n  return val.category;\n})), 'All'];\n\nconst App = () => {\n  const totalItems = MenuItems.length;\n  const [list, setList] = useState(MenuItems);\n  const [total, setTotal] = useState(totalItems);\n\n\n  const showItems = (e) => {\n    const btnVal = e.target.innerHTML;\n    const AllBtn = document.querySelectorAll('.navbar-items button');\n    console.log(AllBtn);\n\n    const activeClass = AllBtn.filter((val) => {\n      return val;\n    })\n\n    console.log(activeClass);\n\n    if (btnVal === 'All') {\n      setList(MenuItems);\n      setTotal(MenuItems.length);\n    } else {\n\n      const filteredList = MenuItems.filter((val) => {\n        return val.category === btnVal;\n      });\n      setTotal(filteredList.length);\n      setList(filteredList);\n    }\n\n\n  }\n\n  return (\n    <>\n      <div className='container'>\n        <div className=\"row\">\n          <div className='col-md-12'>\n            <div className='navbar-items bg-dark p-2 d-flex justify-content-center'>\n              {\n                categoryList.map((val, ind) => {\n                  return (\n                    <>\n                      <button key={ind} id={`btn-${ind + 1}`} className='btn btn-outline-light mx-2' onClick={showItems}>\n                        {val}\n                      </button>\n                    </>\n                  )\n                })\n              }\n\n            </div>\n          </div>\n          <div className='col-md-12 mt-4'>\n            <div className='row'>\n              <div className='results col-12 my-4'>\n                showing {total} of {totalItems}\n              </div>\n              {\n                list.map((val, ind) => {\n                  return <MenuCards key={ind} desc={val.description} img={val.img} cat={val.category} price={val.price} item={val.item} />\n                })\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}