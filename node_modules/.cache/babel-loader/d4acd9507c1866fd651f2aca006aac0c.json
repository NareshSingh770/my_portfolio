{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Project\\\\Restuarants\\\\src\\\\ProtectedRoutes.jsx\";\nimport React, { useEffect } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = () => {\n  let isAuth = localStorage.getItem('isAuth');\n  return isAuth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/sign-in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 34\n  }, this);\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes; // const useAuths = () => {\n//     const user = { loggedIn: false }\n//     return user.loggedIn\n// }\n// const ProtectedRoutes = (props) => {\n//     const isAuth = useAuths();\n//     return isAuth ? <Outlet /> : <Navigate to=\"/sign-in\" />\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["E:/React-Project/Restuarants/src/ProtectedRoutes.jsx"],"names":["React","useEffect","Navigate","Outlet","ProtectedRoutes","isAuth","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAE1B,MAAIC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AAMA,SAAOF,MAAM,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAA7B;AACH,CATD;;KAAMD,e;AAWN,eAAeA,eAAf,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProtectedRoutes = () => {\r\n\r\n    let isAuth = localStorage.getItem('isAuth');\r\n\r\n\r\n\r\n\r\n\r\n    return isAuth ? <Outlet /> : <Navigate to=\"/sign-in\" />\r\n}\r\n\r\nexport default ProtectedRoutes\r\n\r\n\r\n\r\n// const useAuths = () => {\r\n//     const user = { loggedIn: false }\r\n//     return user.loggedIn\r\n// }\r\n\r\n// const ProtectedRoutes = (props) => {\r\n//     const isAuth = useAuths();\r\n//     return isAuth ? <Outlet /> : <Navigate to=\"/sign-in\" />\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}